{
    "angular.json": "{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n        \"project-template\": {\n            \"root\": \"\",\n            \"sourceRoot\": \"src\",\n            \"projectType\": \"application\",\n            \"prefix\": \"app\",\n            \"schematics\": {\n                \"@schematics/angular:component\": {\n                    \"styleext\": \"scss\"\n                }\n            },\n            \"architect\": {\n                \"build\": {\n                    \"builder\": \"@angular-devkit/build-angular:browser\",\n                    \"options\": {\n                        \"outputPath\": \"dist/project-template\",\n                        \"index\": \"src/index.html\",\n                        \"main\": \"src/main.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.app.json\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"src/styles.scss\"],\n                        \"scripts\": [\"node_modules/popper.js/dist/umd/popper.js\"]\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"fileReplacements\": [\n                                {\n                                    \"replace\": \"src/environments/environment.ts\",\n                                    \"with\": \"src/environments/environment.prod.ts\"\n                                }\n                            ],\n                            \"optimization\": true,\n                            \"outputHashing\": \"all\",\n                            \"sourceMap\": false,\n                            \"extractCss\": true,\n                            \"namedChunks\": false,\n                            \"aot\": true,\n                            \"extractLicenses\": true,\n                            \"vendorChunk\": false,\n                            \"buildOptimizer\": true,\n                            \"budgets\": [\n                                {\n                                    \"type\": \"initial\",\n                                    \"maximumWarning\": \"2mb\",\n                                    \"maximumError\": \"5mb\"\n                                }\n                            ]\n                        }\n                    }\n                },\n                \"serve\": {\n                    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"browserTarget\": \"project-template:build:production\"\n                        }\n                    }\n                },\n                \"extract-i18n\": {\n                    \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    }\n                },\n                \"test\": {\n                    \"builder\": \"@angular-devkit/build-angular:karma\",\n                    \"options\": {\n                        \"main\": \"src/test.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.spec.json\",\n                        \"karmaConfig\": \"src/karma.conf.js\",\n                        \"styles\": [\"src/styles.scss\"],\n                        \"scripts\": [],\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"]\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": [\"src/tsconfig.app.json\", \"src/tsconfig.spec.json\"],\n                        \"exclude\": [\"**/node_modules/**\"]\n                    }\n                }\n            }\n        },\n        \"project-template-e2e\": {\n            \"root\": \"e2e/\",\n            \"projectType\": \"application\",\n            \"prefix\": \"\",\n            \"architect\": {\n                \"e2e\": {\n                    \"builder\": \"@angular-devkit/build-angular:protractor\",\n                    \"options\": {\n                        \"protractorConfig\": \"e2e/protractor.conf.js\",\n                        \"devServerTarget\": \"project-template:serve\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"devServerTarget\": \"project-template:serve:production\"\n                        }\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": \"e2e/tsconfig.e2e.json\",\n                        \"exclude\": [\"**/node_modules/**\"]\n                    }\n                }\n            }\n        }\n    },\n    \"defaultProject\": \"project-template\"\n}\n",
    "package.json": "{\r\n  \"name\": \"project-template\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"test\": \"ng test\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"6.1.7\",\r\n    \"@angular/common\": \"6.1.7\",\r\n    \"@angular/compiler\": \"6.1.7\",\r\n    \"@angular/core\": \"6.1.7\",\r\n    \"@angular/forms\": \"6.1.7\",\r\n    \"@angular/http\": \"6.1.7\",\r\n    \"@angular/platform-browser\": \"6.1.7\",\r\n    \"@angular/platform-browser-dynamic\": \"6.1.7\",\r\n    \"@angular/router\": \"6.1.7\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"rxjs\": \"~6.3.3\",\r\n    \"zone.js\": \"~0.8.26\",\r\n    \"@healthcatalyst/cashmere\": \"*\",\r\n    \"npm-font-open-sans\": \"1.1.0\",\r\n    \"@angular/cdk\": \"~6.1.0\",\r\n    \"popper.js\": \"1.14.4\",\r\n    \"font-awesome\": \"4.7.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~0.10.0\",\r\n    \"@angular/cli\": \"6.1.7\",\r\n    \"@angular/compiler-cli\": \"6.1.7\",\r\n    \"@angular/language-service\": \"6.1.7\",\r\n    \"@types/node\": \"~8.9.4\",\r\n    \"@types/jasmine\": \"~2.8.8\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"codelyzer\": \"~4.5.0\",\r\n    \"jasmine-core\": \"~2.99.1\",\r\n    \"jasmine-spec-reporter\": \"~4.2.1\",\r\n    \"karma\": \"~3.0.0\",\r\n    \"karma-chrome-launcher\": \"~2.2.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~2.0.1\",\r\n    \"karma-jasmine\": \"~1.1.2\",\r\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\r\n    \"protractor\": \"~5.4.0\",\r\n    \"ts-node\": \"6.1.7\",\r\n    \"tslint\": \"~5.11.0\",\r\n    \"typescript\": \"~3.1.1\"\r\n  }\r\n}\r\n",
    "src/app/app-routing.module.ts": "import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ExampleContainerComponent} from './example-container.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExampleContainerComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
    "src/app/app.component.ts": "import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {}\n",
    "src/app/app.module.ts": "import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ExampleContainerComponent} from './example-container.component';\nimport {CashmereModule} from './cashmere.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {ProgressSpinnerExampleComponent} from './progress-spinner/progress-spinner-example.component';\n\n@NgModule({\n    declarations: [AppComponent, ExampleContainerComponent, ProgressSpinnerExampleComponent],\n    imports: [BrowserModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, AppRoutingModule, CashmereModule],\n    providers: [],\n    entryComponents: [ProgressSpinnerExampleComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
    "src/app/cashmere.module.ts": "import {NgModule} from '@angular/core';\nimport {\n    AccordionModule,\n    AppSwitcherModule,\n    BreadcrumbsModule,\n    BannerModule,\n    ButtonModule,\n    CheckboxModule,\n    ChipModule,\n    DatepickerModule,\n    DateRangeModule,\n    DialogModule,\n    DrawerModule,\n    FormFieldModule,\n    IconModule,\n    InputModule,\n    ListModule,\n    ModalModule,\n    NavbarModule,\n    PaginationModule,\n    PicklistModule,\n    PopoverModule,\n    ProgressIndicatorsModule,\n    RadioButtonModule,\n    SelectModule,\n    SortModule,\n    SubnavModule,\n    TabsModule,\n    TableModule,\n    TileModule,\n    ToasterModule,\n    TypeformSurveyModule\n} from '@healthcatalyst/cashmere';\n\n@NgModule({\n    exports: [\n        AccordionModule,\n        AppSwitcherModule,\n        BreadcrumbsModule,\n        BannerModule,\n        ButtonModule,\n        CheckboxModule,\n        ChipModule,\n        DatepickerModule,\n        DateRangeModule,\n        DialogModule,\n        DrawerModule,\n        FormFieldModule,\n        IconModule,\n        InputModule,\n        ListModule,\n        ModalModule,\n        NavbarModule,\n        PaginationModule,\n        PicklistModule,\n        PopoverModule,\n        ProgressIndicatorsModule,\n        RadioButtonModule,\n        SelectModule,\n        SortModule,\n        SubnavModule,\n        TableModule,\n        TabsModule,\n        TileModule,\n        ToasterModule,\n        TypeformSurveyModule\n    ]\n})\nexport class CashmereModule {}\n",
    "src/app/example-container.component.ts": "import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-example-container',\n    template: '<hc-example></hc-example>'\n})\nexport class ExampleContainerComponent {}\n",
    "src/assets/.gitkeep": "",
    "src/browserslist": "# This file is currently used by autoprefixer to adjust CSS to support the below specified browsers\n# For additional information regarding the format and rule options, please see:\n# https://github.com/browserslist/browserslist#queries\n#\n# For IE 9-11 support, please remove 'not' from the last line of the file and adjust as needed\n\n> 0.5%\nlast 2 versions\nFirefox ESR\nnot dead\nnot IE 9-11",
    "src/environments/environment.prod.ts": "export const environment = {\n    production: true\n};\n",
    "src/environments/environment.ts": "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "src/index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>ProjectTemplate</title>\n  <base href=\"/\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-root></app-root>\n</body>\n</html>\n",
    "src/main.ts": "import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n",
    "src/polyfills.ts": "/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\nimport 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\nimport 'core-js/es6/string';\n// import 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es7/array';\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es6/reflect';\nimport 'core-js/es7/reflect';\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone'; // Included with Angular CLI.\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n// (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n// (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n// (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n/*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n",
    "src/styles.scss": "$fa-font-path: 'node_modules/font-awesome/fonts';\n@import '~font-awesome/scss/font-awesome';\n\n$FontPathOpenSans: 'node_modules/npm-font-open-sans/fonts';\n@import '~npm-font-open-sans/open-sans';\n\n@import '~@healthcatalyst/cashmere/scss/cashmere';\n",
    "src/tsconfig.app.json": "{\n    \"extends\": \"../tsconfig.json\",\n    \"compilerOptions\": {\n        \"outDir\": \"../out-tsc/app\",\n        \"types\": []\n    },\n    \"exclude\": [\"test.ts\", \"**/*.spec.ts\"]\n}\n",
    "tsconfig.json": "{\n    \"compileOnSave\": false,\n    \"compilerOptions\": {\n        \"baseUrl\": \"./\",\n        \"outDir\": \"./dist/out-tsc\",\n        \"sourceMap\": true,\n        \"declaration\": false,\n        \"module\": \"es2015\",\n        \"moduleResolution\": \"node\",\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true,\n        \"target\": \"es5\",\n        \"typeRoots\": [\"node_modules/@types\"],\n        \"lib\": [\"es2018\", \"dom\"]\n    }\n}\n",
    "src/app/progress-spinner/progress-spinner-example.component.html": "<div class=\"progress-example\">\n    <!-- Options -->\n    <div class=\"col-1\">\n        <hc-form-field>\n            <hc-label>Color:</hc-label>\n            <hc-select [(ngModel)]=\"spinnerColor\">\n                <option value=\"blue\" [selected]=\"spinnerColor === 'blue'\">blue</option>\n                <option value=\"green\" [selected]=\"spinnerColor === 'green'\">green</option>\n                <option value=\"purple\" [selected]=\"spinnerColor === 'purple'\">purple</option>\n                <option value=\"orange\" [selected]=\"spinnerColor === 'orange'\">orange</option>\n                <option value=\"red\" [selected]=\"spinnerColor === 'red'\">red</option>\n                <option value=\"gray\" [selected]=\"spinnerColor === 'gray'\">gray</option>\n                <option value=\"white\" [selected]=\"spinnerColor === 'white'\">white</option>\n            </hc-select>\n        </hc-form-field>\n        <hc-form-field>\n            <hc-label>Diameter:</hc-label>\n            <input\n                hcInput\n                type=\"number\"\n                min=\"20\"\n                max=\"250\"\n                class=\"form-control\"\n                id=\"diameter\"\n                [(ngModel)]=\"spinnerDiameter\"\n                name=\"diameter\"\n            />\n        </hc-form-field>\n        <hc-checkbox id=\"checkbox-bg\" [(ngModel)]=\"spinnerHasChannel\" [checked]=\"spinnerHasChannel\">BG Channel</hc-checkbox>\n        <hc-checkbox id=\"checkbox-center\" [(ngModel)]=\"spinnerCentered\" [checked]=\"spinnerCentered\">Centered</hc-checkbox>\n        <hr />\n        <hc-checkbox id=\"checkbox-determinate\" [(ngModel)]=\"spinnerIsDeterminate\">Determinate</hc-checkbox>\n        <hc-form-field inline>\n            <hc-label>Progress (0-100%):</hc-label>\n            <input\n                hcInput\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                class=\"form-control\"\n                id=\"name\"\n                [(ngModel)]=\"spinnerProgress\"\n                [disabled]=\"!spinnerIsDeterminate\"\n                name=\"name\"\n            />\n        </hc-form-field>\n    </div>\n\n    <!-- Spinner -->\n    <div class=\"col-2\">\n        <div class=\"progress-component-container\" [ngClass]=\"{'dark-bg': spinnerColor === 'white'}\">\n            <hc-progress-spinner\n                [diameter]=\"spinnerDiameter\"\n                [color]=\"spinnerColor\"\n                [hasChannel]=\"spinnerHasChannel\"\n                [isCentered]=\"spinnerCentered\"\n                [isDeterminate]=\"spinnerIsDeterminate\"\n                [progress]=\"spinnerProgress\"\n            ></hc-progress-spinner>\n        </div>\n    </div>\n</div>\n",
    "src/app/progress-spinner/progress-spinner-example.component.scss": ".progress-example {\n    display: flex;\n    margin-top: 20px;\n}\n\n.col-2 {\n    flex: 1 0 auto;\n    margin-left: 20px;\n}\n\n.progress-component-container {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    padding: 15px;\n    border: 1px solid #e5e5e5;\n}\n\n.progress-component-container.dark-bg {\n    background-color: #384655;\n}\n\nlabel,\nhc-checkbox {\n    margin: 20px 0 5px;\n    display: block;\n}\n",
    "src/app/progress-spinner/progress-spinner-example.component.ts": "import {Component} from '@angular/core';\n\n/**\n * @title Progress spinner\n */\n@Component({\n    selector: 'hc-progress-spinner-example',\n    templateUrl: 'progress-spinner-example.component.html',\n    styleUrls: ['progress-spinner-example.component.scss']\n})\nexport class ProgressSpinnerExampleComponent {\n    spinnerIsDeterminate = false;\n    spinnerProgress = 25;\n    spinnerColor = 'blue';\n    spinnerDiameter = 50;\n    spinnerHasChannel = true;\n    spinnerCentered = true;\n}\n"
}
